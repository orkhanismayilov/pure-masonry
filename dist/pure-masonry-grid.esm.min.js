class PureMasonryGrid{container;config;containerElem;gridItems=[];columns;initialized=!1;defaultConfig={columns:4,columnGap:16};_layoutConfig=null;set layoutConfig(t){if(this._layoutConfig===t)return;let i=!1;if(this._layoutConfig?.columns!==t.columns&&(i=!0),this._layoutConfig=t,this._layoutConfig.rowGap&&0===this._layoutConfig.rowGap||(this._layoutConfig.rowGap=this._layoutConfig.columnGap),i)return this.setContainerStyles(),this.generateColumns(),void this.distributeGridItems();this.setColumnGap(),this.setRowGap()}get itemsPerColumns(){return Math.ceil(this.gridItems.length/this._layoutConfig.columns)}constructor(t,i){this.container=t,this.config=i,this.config={...this.defaultConfig,...this.config},this.config.columnGap??=0,this.config.rowGap??=this.config.columnGap,this.init()}init(){if(!this.container)throw new Error("Container selector is required");if(this.containerElem=document.querySelector(this.container),!this.containerElem)throw new Error(`Container with selector ${this.container} is not in the DOM`);this.gridItems=Array.from(this.containerElem.children),this.setItemsClassName(),this.handleLayout(),this.config.breakpoints&&this.handleResize(),this.config.events?.init?.(this),this.initialized=!0}handleLayout(){const{breakpoints:t}=this.config;if(t&&Object.keys(t).some((t=>window.innerWidth>=+t))){const[i,e]=Object.entries(t).filter((([t])=>window.innerWidth>=+t)).reverse()[0];this.layoutConfig=e}else this.layoutConfig=this.config}handleResize(){window.addEventListener("resize",(()=>{this.handleLayout()}))}setContainerStyles(){this.containerElem.style.display="grid",this.containerElem.style.gridTemplateColumns=`repeat(${this._layoutConfig.columns}, minmax(0, 1fr))`,this.containerElem.style.columnGap=`${this._layoutConfig.columnGap}px`,this.containerElem.style.alignItems="start",this.initialized&&this.config.events?.relayout?.(this)}generateColumns(){this.containerElem.innerHTML="",this.columns=Array.from({length:this._layoutConfig.columns},((t,i)=>{const e=document.createElement("div");return e.style.display="grid",e.style.rowGap=`${this._layoutConfig.rowGap}px`,this.containerElem.appendChild(e),{nativeElement:e,full:!0}}))}distributeGridItems(t=this.gridItems){for(let i=0;i<t.length;i+=this._layoutConfig.columns){const e=t.slice(i,i+this._layoutConfig.columns);for(const[t,i]of e.entries())this.columns[t].nativeElement.appendChild(i)}for(const t of this.columns)t.full=t.nativeElement.children.length===this.itemsPerColumns}appendItems(t=[]){if(t.length<=0)return;this.setItemsClassName(this.config.itemClass,t),this.gridItems.push(...t);const i=this.columns.filter((t=>!t.full));for(const e of i)e.nativeElement.appendChild(t.shift());this.distributeGridItems(t),this.config.events?.append?.(this)}setColumnGap(t=this._layoutConfig?.columnGap){this.containerElem.style.columnGap=`${t}px`}setRowGap(t=this._layoutConfig?.rowGap){for(const{nativeElement:i}of this.columns)i.style.rowGap=`${t}px`}setItemsClassName(t=this.config.itemClass,i=this.gridItems){if(t&&i.length>0)for(const e of i)e.classList.add(t)}}export{PureMasonryGrid as default};
